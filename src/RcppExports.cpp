// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// hello_world
void hello_world();
RcppExport SEXP _wdnet_hello_world() {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    hello_world();
    return R_NilValue;
END_RCPP
}
// fx
double fx(arma::colvec x, arma::mat Y, arma::colvec z);
RcppExport SEXP _wdnet_fx(SEXP xSEXP, SEXP YSEXP, SEXP zSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::colvec >::type x(xSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::colvec >::type z(zSEXP);
    rcpp_result_gen = Rcpp::wrap(fx(x, Y, z));
    return rcpp_result_gen;
END_RCPP
}
// findNode_cpp
arma::vec findNode_cpp(arma::vec nodes, arma::vec edges, arma::vec index);
RcppExport SEXP _wdnet_findNode_cpp(SEXP nodesSEXP, SEXP edgesSEXP, SEXP indexSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type nodes(nodesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type edges(edgesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type index(indexSEXP);
    rcpp_result_gen = Rcpp::wrap(findNode_cpp(nodes, edges, index));
    return rcpp_result_gen;
END_RCPP
}
// nodeStrength_cpp
Rcpp::List nodeStrength_cpp(arma::vec startNode, arma::vec endNode, arma::vec weight, int nNodes);
RcppExport SEXP _wdnet_nodeStrength_cpp(SEXP startNodeSEXP, SEXP endNodeSEXP, SEXP weightSEXP, SEXP nNodesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type startNode(startNodeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type endNode(endNodeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type weight(weightSEXP);
    Rcpp::traits::input_parameter< int >::type nNodes(nNodesSEXP);
    rcpp_result_gen = Rcpp::wrap(nodeStrength_cpp(startNode, endNode, weight, nNodes));
    return rcpp_result_gen;
END_RCPP
}
// sampleNode_cpp
arma::vec sampleNode_cpp(arma::vec totalNode);
RcppExport SEXP _wdnet_sampleNode_cpp(SEXP totalNodeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type totalNode(totalNodeSEXP);
    rcpp_result_gen = Rcpp::wrap(sampleNode_cpp(totalNode));
    return rcpp_result_gen;
END_RCPP
}
// rpanet_cpp
Rcpp::List rpanet_cpp(arma::vec startNode, arma::vec endNode, arma::vec scenario, int nNodes, int nEdges, double delta_out, double delta_in);
RcppExport SEXP _wdnet_rpanet_cpp(SEXP startNodeSEXP, SEXP endNodeSEXP, SEXP scenarioSEXP, SEXP nNodesSEXP, SEXP nEdgesSEXP, SEXP delta_outSEXP, SEXP delta_inSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type startNode(startNodeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type endNode(endNodeSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type scenario(scenarioSEXP);
    Rcpp::traits::input_parameter< int >::type nNodes(nNodesSEXP);
    Rcpp::traits::input_parameter< int >::type nEdges(nEdgesSEXP);
    Rcpp::traits::input_parameter< double >::type delta_out(delta_outSEXP);
    Rcpp::traits::input_parameter< double >::type delta_in(delta_inSEXP);
    rcpp_result_gen = Rcpp::wrap(rpanet_cpp(startNode, endNode, scenario, nNodes, nEdges, delta_out, delta_in));
    return rcpp_result_gen;
END_RCPP
}
